name: Auto-Fix CI Failures

on:
  workflow_call:
    inputs:
      failed_job:
        description: 'Name of the job that failed'
        required: true
        type: string
      run_url:
        description: 'URL of the failed workflow run'
        required: true
        type: string
      branch:
        description: 'Branch where the failure occurred'
        required: true
        type: string
      sha:
        description: 'Commit SHA where the failure occurred'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      failed_job:
        description: 'Name of the job that failed'
        required: true
        type: string
      branch:
        description: 'Branch to fix'
        required: true
        default: 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-fix:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
    - name: Check OpenAI API Key
      id: check_key
      run: |
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "⚠️ OPENAI_API_KEY secret is not set. Skipping auto-fix."
          echo "To enable auto-fix, add OPENAI_API_KEY to repository secrets."
          echo "has_key=false" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "✅ OPENAI_API_KEY is configured"
          echo "has_key=true" >> $GITHUB_OUTPUT
        fi

    - name: Checkout code
      if: steps.check_key.outputs.has_key == 'true'
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.sha || github.sha }}
        fetch-depth: 0

    - name: Set up JDK 17
      if: steps.check_key.outputs.has_key == 'true'
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      if: steps.check_key.outputs.has_key == 'true'
      run: chmod +x gradlew

    - name: Run Codex Auto-Fix
      if: steps.check_key.outputs.has_key == 'true'
      uses: openai/codex-action@main
      with:
        openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        prompt: >-
          You are working in a Java project using Gradle with JUnit 5 tests and JaCoCo code coverage.
          The project implements sorting algorithms (BubbleSort and MergeSort) with comprehensive parametrized tests.

          FAILED JOB: ${{ inputs.failed_job }}
          FAILED RUN: ${{ inputs.run_url || 'Manual trigger' }}

          Run './gradlew test' to see what's failing. Identify the minimal change needed to make all tests pass
          and meet coverage thresholds (80% overall, 70% per-class). Implement ONLY that change and stop.
          Do not refactor unrelated code. Keep changes surgical and minimal.
        codex_args: '["--config","sandbox_mode=\"workspace-write\""]'

    - name: Verify Fix
      if: steps.check_key.outputs.has_key == 'true'
      run: |
        echo "Running tests to verify fix..."
        ./gradlew test jacocoTestCoverageVerification --no-daemon

    - name: Create Auto-Fix PR
      if: success() && steps.check_key.outputs.has_key == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: "fix(ci): auto-fix failing ${{ inputs.failed_job }} via Codex"
        branch: autofix/${{ github.run_id }}
        base: ${{ inputs.branch || github.ref_name }}
        title: "🤖 Auto-fix: ${{ inputs.failed_job }} Failure"
        body: |
          ## Auto-Fix Applied

          This PR was automatically generated by Codex in response to a CI failure.

          **Failed Job:** `${{ inputs.failed_job }}`
          **Workflow Run:** ${{ inputs.run_url || 'Manual trigger' }}
          **Branch:** `${{ inputs.branch || github.ref_name }}`
          **Commit:** `${{ inputs.sha || github.sha }}`

          This PR contains minimal changes intended solely to make the CI pass.
          Please review carefully before merging.

          🤖 Generated with Codex Auto-Fix
