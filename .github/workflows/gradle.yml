name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Gradle wrapper
      uses: gradle/actions/wrapper-validation@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Run tests
      run: ./gradlew test --no-daemon --stacktrace

    - name: Publish test report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: build/test-results/test/*.xml
        reporter: java-junit
        fail-on-error: true

    - name: Build with Gradle
      run: ./gradlew build --no-daemon --stacktrace

    - name: Upload test and build artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-and-build-reports
        path: |
          build/reports/
          build/test-results/
        retention-days: 7

  code-coverage:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Generate JaCoCo coverage report
      run: ./gradlew test jacocoTestReport --no-daemon --stacktrace

    - name: Verify coverage thresholds
      run: ./gradlew jacocoTestCoverageVerification --no-daemon

    - name: Add coverage to PR
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: build/reports/jacoco/test/jacocoTestReport.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 70
        title: Code Coverage Report
        update-comment: true
        pass-emoji: ':green_circle:'
        fail-emoji: ':red_circle:'

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: build/reports/jacoco/test/html/
        retention-days: 30

    - name: Generate JaCoCo badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
        generate-branches-badge: true
        generate-summary: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: build/reports/jacoco/test/jacocoTestReport.xml
        fail_ci_if_error: false
        verbose: true

  autofix:
    runs-on: ubuntu-latest
    # Trigger when build OR code-coverage jobs fail
    if: always() && (needs.build.result == 'failure' || needs.code-coverage.result == 'failure')
    needs: [build, code-coverage]

    steps:
    - name: Check OpenAI API Key
      run: |
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "⚠️ OPENAI_API_KEY secret is not set. Skipping auto-fix."
          echo "To enable auto-fix, add OPENAI_API_KEY to repository secrets."
          exit 0
        fi

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Run Codex Auto-Fix
      if: secrets.OPENAI_API_KEY != ''
      uses: openai/codex-action@main
      with:
        openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        prompt: >-
          You are working in a Java project using Gradle with JUnit 5 tests and JaCoCo code coverage.
          The project implements sorting algorithms (BubbleSort and MergeSort) with comprehensive parametrized tests.

          FAILED JOB: ${{ needs.build.result == 'failure' && 'build' || needs.code-coverage.result == 'failure' && 'code-coverage' || 'unknown' }}

          Run './gradlew test' to see what's failing. Identify the minimal change needed to make all tests pass
          and meet coverage thresholds (80% overall, 70% per-class). Implement ONLY that change and stop.
          Do not refactor unrelated code. Keep changes surgical and minimal.
        codex_args: '["--config","sandbox_mode=\"workspace-write\""]'

    - name: Verify Fix
      if: secrets.OPENAI_API_KEY != ''
      run: |
        echo "Running tests to verify fix..."
        ./gradlew test jacocoTestCoverageVerification --no-daemon

    - name: Create Auto-Fix PR
      if: success() && secrets.OPENAI_API_KEY != ''
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: "fix(ci): auto-fix failing ${{ needs.build.result == 'failure' && 'build' || 'coverage' }} via Codex"
        branch: autofix/${{ github.run_id }}
        base: ${{ github.head_ref || github.ref_name }}
        title: "🤖 Auto-fix: ${{ needs.build.result == 'failure' && 'Build' || 'Coverage' }} Failure"
        body: |
          ## Auto-Fix Applied

          This PR was automatically generated by Codex in response to a CI failure.

          **Failed Job:** ${{ needs.build.result == 'failure' && 'build' || needs.code-coverage.result == 'failure' && 'code-coverage' || 'unknown' }}
          **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          **Branch:** `${{ github.head_ref || github.ref_name }}`

          This PR contains minimal changes intended solely to make the CI pass.
          Please review carefully before merging.

          🤖 Generated with Codex Auto-Fix

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Only run on pushes to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4
